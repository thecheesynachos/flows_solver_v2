import numpy as np

from flows_solver.problem import FlowsProblem

_problems_dict = {

    5: [

        np.array([[1, 2, 0, 0, 0],
                  [0, 0, 1, 3, 2],
                  [0, 0, 0, 0, 4],
                  [0, 4, 0, 0, 0],
                  [0, 0, 0, 0, 3]]),

        np.array([[0, 1, 3, 0, 0],
                  [0, 2, 0, 0, 0],
                  [0, 0, 1, 0, 0],
                  [0, 0, 0, 0, 0],
                  [2, 3, 0, 0, 0]]),

        np.array([[3, 5, 0, 4, 0],
                  [0, 0, 0, 5, 4],
                  [1, 0, 0, 0, 0],
                  [0, 0, 0, 2, 0],
                  [1, 2, 3, 0, 0]]),

    ],

    6: [

        # 6x6 Mania, lvl 1
        np.array([[0, 0, 0, 0, 0, 5],
                  [0, 0, 0, 0, 0, 0],
                  [0, 1, 4, 0, 0, 0],
                  [0, 0, 0, 3, 0, 1],
                  [0, 3, 0, 5, 4, 2],
                  [0, 0, 0, 2, 0, 0]]),

        # 6x6 Mania, lvl 120
        np.array([[1, 0, 0, 0, 0, 0],
                  [0, 0, 2, 0, 3, 4],
                  [0, 0, 0, 3, 0, 2],
                  [0, 0, 0, 0, 0, 1],
                  [0, 0, 0, 0, 4, 0],
                  [0, 0, 0, 0, 0, 0]]),

        # 6x6 Mania, lvl 150
        np.array([[0, 5, 4, 3, 2, 0],
                  [0, 6, 0, 0, 3, 0],
                  [0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 6, 0, 2],
                  [0, 0, 5, 4, 0, 1],
                  [1, 0, 0, 0, 0, 0]]),

    ],

    7: [

        # 7x7 Mania, lvl 30
        np.array([[0, 0, 3, 4, 0, 2, 1],
                  [0, 1, 5, 0, 0, 0, 0],
                  [0, 0, 0, 0, 2, 0, 3],
                  [0, 0, 0, 0, 4, 0, 0],
                  [0, 0, 0, 0, 5, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0]]),

        # 7x7 Mania, lvl 90
        np.array([[6, 1, 2, 0, 0, 0, 0],
                  [0, 0, 0, 0, 4, 5, 0],
                  [6, 4, 0, 0, 0, 0, 0],
                  [2, 3, 0, 1, 0, 0, 0],
                  [0, 0, 0, 0, 0, 5, 0],
                  [0, 0, 0, 0, 0, 3, 0],
                  [0, 0, 0, 0, 0, 0, 0]]),

        # 7x7 Mania, lvl 50
        np.array([[3, 0, 0, 0, 0, 0, 0],
                  [6, 0, 0, 0, 0, 0, 0],
                  [2, 0, 0, 0, 0, 0, 3],
                  [0, 0, 0, 1, 0, 6, 2],
                  [0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 4, 0, 0, 5, 4],
                  [1, 5, 0, 0, 0, 0, 0]]),

        # Extreme Rainbow, lvl 145
        np.array([[3, 0, 0, 0, 0, 0, 4],
                  [0, 0, 0, 0, 2, 0, 0],
                  [0, 3, 0, 0, 0, 0, 0],
                  [0, 2, 0, 5, 0, 0, 0],
                  [0, 0, 0, 4, 0, 0, 1],
                  [0, 1, 0, 0, 0, 0, 5],
                  [0, 0, 0, 0, 0, 0, 0]]),

    ],

    8: [

        # 8x8 Mania, lvl 30
        np.array([[1, 0, 0, 0, 0, 0, 0, 2],
                  [0, 0, 6, 0, 0, 3, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 4, 5, 6, 0, 0, 0],
                  [0, 0, 3, 0, 0, 0, 0, 0],
                  [0, 0, 2, 0, 5, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 1, 0, 0, 0, 0, 0, 4]]),

        # 8x8 Mania, lvl 120
        np.array([[1, 0, 0, 0, 3, 4, 0, 0],
                  [0, 0, 2, 0, 0, 5, 0, 0],
                  [2, 0, 0, 0, 0, 3, 0, 0],
                  [0, 0, 0, 0, 0, 4, 0, 0],
                  [1, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 7, 0, 6, 0, 6, 0],
                  [0, 7, 0, 0, 0, 0, 5, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0]]),

        # 8x8 Mania, lvl 148
        np.array([[9, 0, 0, 0, 0, 0, 5, 4],
                  [7, 6, 8, 7, 0, 5, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 3],
                  [0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 6, 0, 8, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 1, 2, 0, 0, 4, 0],
                  [1, 2, 0, 0, 9, 3, 0, 0]]),

        # Extreme Pack, lvl 30
        np.array([[1, 0, 0, 0, 0, 0, 0, 2],
                  [0, 0, 0, 0, 0, 0, 0, 3],
                  [0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 1, 0, 0, 0, 0, 0],
                  [0, 0, 0, 3, 4, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 2, 0, 0, 0, 0, 0],
                  [4, 0, 0, 0, 0, 0, 0, 0]]),

    ],

    9: [

        # 9x9 Mania, lvl 30
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 6, 0, 0, 0, 0, 0, 0, 0],
                  [0, 7, 8, 0, 0, 0, 0, 0, 7],
                  [0, 0, 2, 0, 0, 0, 0, 0, 0],
                  [0, 4, 0, 6, 5, 0, 0, 8, 0],
                  [0, 3, 0, 5, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 4],
                  [0, 0, 0, 0, 0, 0, 0, 0, 3],
                  [0, 2, 1, 0, 0, 0, 0, 0, 1]]),

        # 9x9 Mania, lvl 90
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 1, 0],
                  [0, 0, 5, 0, 0, 0, 0, 0, 0],
                  [0, 1, 4, 0, 0, 0, 4, 0, 0],
                  [0, 0, 2, 0, 7, 5, 6, 0, 0],
                  [0, 0, 0, 0, 3, 0, 0, 0, 0],
                  [0, 3, 0, 0, 0, 0, 6, 0, 0],
                  [0, 0, 0, 0, 7, 0, 0, 0, 0],
                  [2, 0, 0, 0, 0, 0, 0, 0, 0]]),

        # 9x9 Mania, lvl 149
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 9],
                  [0, 3, 0, 0, 0, 0, 0, 1, 2],
                  [0, 0, 7, 0, 0, 0, 0, 2, 0],
                  [1, 4, 6, 3, 7, 0, 0, 0, 0],
                  [0, 0, 0, 0, 9, 0, 8, 5, 0],
                  [0, 0, 0, 0, 0, 6, 0, 0, 0],
                  [0, 5, 0, 0, 4, 8, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0]]),

        # Extreme Pack, 9x9 lvl 30
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 3, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 4, 2, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 4, 0, 0, 0, 0, 0, 3],
                  [1, 0, 2, 0, 0, 0, 0, 0, 1]]),

    ],

    10: [

        # 10x10 Mania, lvl 30
        np.array([[0, 4, 1, 0, 0, 0, 0, 0, 5, 0],
                  [0, 1, 0, 0, 11, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 6, 0, 0, 0, 0, 0],
                  [0, 0, 7, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 8, 0, 0, 0, 0, 0, 0],
                  [0, 0, 4, 9, 0, 0, 0, 0, 0, 0],
                  [0, 3, 8, 0, 9, 7, 6, 0, 0, 0],
                  [3, 0, 2, 0, 0, 11, 0, 0, 0, 0],
                  [2, 0, 0, 10, 0, 0, 0, 0, 0, 0],
                  [10, 0, 0, 5, 0, 0, 0, 0, 0, 0]]),

        # 10x10 Mania, lvl 87
        np.array([[0, 0, 0, 0, 7, 0, 0, 0, 0, 0],
                  [0, 0, 0, 3, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 1, 0, 0, 0, 8, 0, 0],
                  [0, 0, 1, 2, 0, 5, 8, 0, 0, 0],
                  [0, 0, 4, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 2, 0, 0, 7, 0],
                  [0, 0, 0, 0, 0, 4, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 3, 6, 0, 0, 0],
                  [0, 5, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 6]]),

        # 10x10 Mania, lvl 150
        np.array([[3, 0, 4, 0, 0, 0, 0, 0, 0, 0],
                  [1, 0, 0, 0, 2, 0, 8, 7, 0, 0],
                  [0, 0, 0, 0, 9, 0, 0, 0, 0, 0],
                  [0, 3, 4, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 5, 0, 0, 9, 0, 0, 0, 0],
                  [2, 1, 0, 0, 0, 0, 0, 8, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 10, 6, 0, 0],
                  [0, 10, 0, 0, 0, 7, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 6, 5, 0, 0, 0]]),

        # Extreme Pack, 10x10 lvl 30
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 6, 0],
                  [0, 0, 0, 5, 4, 0, 3, 0, 0, 0],
                  [0, 0, 2, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 6, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 4, 0],
                  [0, 0, 3, 0, 0, 0, 0, 5, 1, 0],
                  [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 2, 0, 0, 0, 0, 0]]),

        # Extreme Pack, 10x10 lvl 26
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 4, 0, 0],
                  [5, 0, 0, 0, 0, 2, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 5, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
                  [0, 3, 4, 0, 0, 0, 0, 0, 2, 0],
                  [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]]),

    ],

    11: [

        # 11x11 Mania, lvl 30
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 10, 11, 5, 0, 6, 0, 0, 0],
                  [0, 0, 11, 0, 8, 0, 0, 7, 0, 0, 0],
                  [0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0],
                  [0, 2, 0, 10, 0, 3, 7, 0, 0, 0, 0],
                  [0, 0, 0, 9, 0, 0, 6, 0, 8, 0, 1],
                  [0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 3],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]),

        # 11x11 Mania, lvl 90
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 2, 3, 0, 0, 5, 4, 0, 3, 0, 0],
                  [0, 8, 2, 0, 0, 6, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0],
                  [0, 1, 4, 6, 0, 0, 7, 0, 0, 0, 5],
                  [0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0],
                  [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]),

        # 11x11 Mania, lvl 150
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 9, 0, 0, 0, 0, 0, 0, 11, 8],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 7],
                  [0, 11, 9, 10, 0, 0, 6, 0, 0, 0, 0],
                  [0, 0, 0, 8, 0, 0, 0, 0, 0, 4, 3],
                  [0, 0, 5, 7, 0, 0, 0, 12, 0, 0, 0],
                  [0, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 3],
                  [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 4],
                  [2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]]),

        # Extreme pack, 11x11 lvl 10
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 1, 0, 0, 0, 0, 0, 0, 0, 6, 0],
                  [0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [2, 4, 6, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0],
                  [0, 0, 1, 0, 0, 3, 4, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]),

        # Extreme pack, 11x11 lvl 30
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8],
                  [0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 4, 0, 0, 0, 0, 7, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [1, 2, 0, 0, 0, 0, 6, 1, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 5, 3, 0, 0, 0, 0],
                  [0, 0, 0, 8, 0, 4, 0, 0, 6, 0, 0],
                  [0, 0, 0, 0, 0, 2, 0, 7, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0]]),

    ]

}


def generate_fixed_example_of_size(problem_sz: int, problem_idx: int) -> FlowsProblem:
    if problem_sz not in _problems_dict.keys():
        raise ValueError('No examples for the current size available.')
    elif not 0 <= problem_idx < len(_problems_dict[problem_sz]):
        raise ValueError('No example with this index.')
    else:
        return FlowsProblem.from_board_array(_problems_dict[problem_sz][problem_idx].T[:, ::-1])
